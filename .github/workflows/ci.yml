name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # 当推送 v* 标签时触发发布
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]  # 当创建 GitHub Release 时触发发布

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
        
    - name: 代码风格检查
      run: |
        pip install flake8
        flake8 scenext_mcp --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: 运行测试
      run: |
        python tests/test_basic.py
        
    - name: 测试包构建
      run: |
        pip install build
        python -m build
        
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安装构建依赖
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: 安装项目依赖
      run: |
        pip install -r requirements.txt
        
    - name: 运行测试
      run: |
        python tests/test_basic.py
        
    - name: 构建包
      run: |
        python -m build
        
    - name: 验证包
      run: |
        twine check dist/*
        
    - name: 发布到 PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*